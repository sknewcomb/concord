// Prisma schema for Concord User model
// You can add more fields as needed for your app

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  image     String?  // profile image url (optional)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  ownedServers Server[]      @relation("UserOwnedServers")
  memberships  Membership[]
  messages     Message[]
}

model Server {
  id          String      @id @default(cuid())
  name        String
  icon        String?     // optional server icon
  ownerId     String
  owner       User        @relation("UserOwnedServers", fields: [ownerId], references: [id])
  memberships Membership[]
  channels    Channel[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Channel {
  id        String      @id @default(cuid())
  name      String
  type      ChannelType @default(TEXT)
  serverId  String
  server    Server      @relation(fields: [serverId], references: [id])
  messages  Message[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

enum ChannelType {
  TEXT
  VOICE
}

model Membership {
  id        String   @id @default(cuid())
  userId    String
  serverId  String
  role      Role     @default(MEMBER)
  user      User     @relation(fields: [userId], references: [id])
  server    Server   @relation(fields: [serverId], references: [id])
  joinedAt  DateTime @default(now())
}

enum Role {
  OWNER
  ADMIN
  MEMBER
}

model Message {
  id        String   @id @default(cuid())
  content   String
  userId    String
  channelId String
  user      User     @relation(fields: [userId], references: [id])
  channel   Channel  @relation(fields: [channelId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
